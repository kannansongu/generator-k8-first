version: '2'
settings:

  conductor:
    # The Conductor container does the heavy lifting, and provides a portable
    # Python runtime for building your target containers. It should be derived
    # from the same distribution as you're building your target containers with.
    base: rhel-7
    # roles_path: roles
    # volumes:      # Provide a list of volumes to mount
    # set the timeouts so builds have enough time to process large images
    environment:  # List or mapping of environment variables
      - "COMPOSE_HTTP_TIMEOUT=300"
      - "DOCKER_CLIENT_TIMEOUT=300"

  # Set the name of the project. Defaults to basename of the project directory.
  # For built services, concatenated with service name to form the built image name.
  project_name: digital-service-banker-assignment-test

  # The deployment_output_path is mounted to the Conductor container, and the
  # `run` and `deployment` commands then write generated Ansible playbooks to it.
  # deployment_output_path: ./ansible-deployment

  # When using the k8s or openshift engines, use the following to authorize with the API.
  # Values set here will be passed to the Ansible modules. Any file paths will be mounted
  # to the conductor container, allowing the `run` command to access the API.
  #k8s_auth:
    # path to a K8s config file
    #config_file:
    # name of a context found within the config file
    #context:
    # URL for accessing the K8s API
    #host:
    # An API authentication token
    #api_key:
    # Path to a ca cert file
    #ssl_ca_cert:
    # Path to a cert file
    #cert_file:
    # Path to a key file
    #key_file:
    # boolean, indicating if SSL certs should be validated
    #verify_ssl:

  # When using the k8s or openshift engines, use the following to set the namespace.
  # If not set, the project name will be used. For openshift, the namespace maps to a project,
  # and description and display_name are supported.
  #k8s_namespace:
  #  name:
  #  description:
  #  display_name:

services:
  # Add your containers here, specifying the base image you want to build from.
  # To use this example, uncomment it and delete the curly braces after services key.

  apiserver:
    from: nextgen-nodejs-base-image:rev-d74f17f
    working_dir: /tmp
    environment:
    #   - "LD_LIBRARY_PATH=/nodeapp/instantclient_12_2"
       - "HOME=/tmp"
    roles:
     - ansible-role-nodeapiserver
    expose:
     - '3905'
    ports:
     - '3905:3905'
    command: ['npm','run','start','--prefix','/nodeapp']
